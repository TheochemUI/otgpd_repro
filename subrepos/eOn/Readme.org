* About
- A modern, elegant approach to working with [[https://theochemui.github.io/eOn/][eOn]]
** Build
*** Conda
We provide a ~conda~ environment, which is only partially supported for reproducible usage, since it depends on local compilers.
#+begin_src bash
micromamba create -n eongit -f conda-lock.yml
micromamba activate eongit
#+end_src
This leads to the most robust installation approach:
#+begin_src bash
meson setup bbdir --prefix=$CONDA_PREFIX --libdir=lib --native-file nativeFiles/mold.ini --native-file nativeFiles/ccache_gnu.ini
meson install -C bbdir
#+end_src
The server is accessed through ~python -m eon.server~.

Note that all older documentation calls to ~eon~ should now be ~python -m
eon.server~. The ~eonclient~ binary is automatically made available in the
activated environment.
** Running Tests
*** Meson
This is the preferred method.
#+begin_src bash
cd client
# in conda, add --prefix=$CONDA_PREFIX --libdir=lib
meson setup bbdir --buildtype=debug -Dbuild_tests=true
meson test -C bbdir
#+end_src
* Contributing
*Do* run ~pre-commit~ before actually submitting pull requests!
#+begin_src bash
pipx run pre-commit run --all-files
#+end_src
For best results, consider installing the ~git~ hook as well.
#+begin_src bash
pipx run pre-commit install
#+end_src
* Testing
We have both ~Catch2~ unit tests, and also ~ApprovalTests~. For adding new
approval tests, first build them with ~meson compile~, run them to approve, and
then re-run to make sure things pass with ~meson test~.
* License
[[https://opensource.org/licenses/BSD-3-Clause][BSD-3 clause]].
